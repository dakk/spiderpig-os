<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=UTF-8">
<title>SpiderPig: src/kernel/include/mm/phys.h File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css">
<link href="doxygen.css" rel="stylesheet" type="text/css">
</head><body>
<!-- Generated by Doxygen 1.5.8 -->
<div class="navigation" id="top">
  <div class="tabs">
    <ul>
      <li><a href="index.html"><span>Main&nbsp;Page</span></a></li>
      <li><a href="annotated.html"><span>Classes</span></a></li>
      <li class="current"><a href="files.html"><span>Files</span></a></li>
    </ul>
  </div>
  <div class="tabs">
    <ul>
      <li><a href="files.html"><span>File&nbsp;List</span></a></li>
      <li><a href="globals.html"><span>File&nbsp;Members</span></a></li>
    </ul>
  </div>
</div>
<div class="contents">
<h1>src/kernel/include/mm/phys.h File Reference</h1><code>#include &lt;<a class="el" href="types_8h-source.html">types.h</a>&gt;</code><br>

<p>
<a href="phys_8h-source.html">Go to the source code of this file.</a><table border="0" cellpadding="0" cellspacing="0">
<tr><td></td></tr>
<tr><td colspan="2"><br><h2>Classes</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">struct &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="structphys__page__t.html">phys_page_t</a></td></tr>

<tr><td colspan="2"><br><h2>Defines</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="e9232c0825c67516aa52e053df19943e"></a><!-- doxytag: member="phys.h::PHYS_MAX_PAGE" ref="e9232c0825c67516aa52e053df19943e" args="" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="phys_8h.html#e9232c0825c67516aa52e053df19943e">PHYS_MAX_PAGE</a>&nbsp;&nbsp;&nbsp;1048576</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Numero massimo di pagine (4gb / 4kb / 32). <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="ded661990dc0b816a9dfa22a5847d8cf"></a><!-- doxytag: member="phys.h::PHYS_PAGE_SIZE" ref="ded661990dc0b816a9dfa22a5847d8cf" args="" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="phys_8h.html#ded661990dc0b816a9dfa22a5847d8cf">PHYS_PAGE_SIZE</a>&nbsp;&nbsp;&nbsp;4</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Dimensione pagine (kb). <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="1774def47e7cae4e63c0572f3aa45275"></a><!-- doxytag: member="phys.h::PHYS_MAX_BLOCKS" ref="1774def47e7cae4e63c0572f3aa45275" args="" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="phys_8h.html#1774def47e7cae4e63c0572f3aa45275">PHYS_MAX_BLOCKS</a>&nbsp;&nbsp;&nbsp;(PHYS_MAX_PAGE / 32)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Numero di blocchi di 32 pagine. <br></td></tr>
<tr><td colspan="2"><br><h2>Functions</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="phys_8h.html#c7743ad5a4365afccfb4b282fe29b1a6">phys_reserve</a> (uint32_t, uint32_t)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="phys_8h.html#2bc5fb88d91ad15852998d3f6fa4294f">phys_free</a> (void *)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="phys_8h.html#75d8151ab1dd7fccb53f690d74d3332b">phys_alloc</a> (size_t)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">uint8_t&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="phys_8h.html#0ec60603a07c9183794e1e78f4cff16b">phys_if_free_page</a> (int *, int *)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">uint32_t&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="phys_8h.html#76b96b96fbb39336031f7e66427587b0">phys_get_free_pages</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">uint32_t&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="phys_8h.html#cbdd7f6d2c8e03885537bf943b7fadd3">phys_first_free_alloc</a> ()</td></tr>

<tr><td colspan="2"><br><h2>Variables</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="844b8333107c736505e09561062bf36d"></a><!-- doxytag: member="phys.h::phys_allocated" ref="844b8333107c736505e09561062bf36d" args="[PHYS_MAX_BLOCKS]" -->
<a class="el" href="structphys__page__t.html">phys_page_t</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="phys_8h.html#844b8333107c736505e09561062bf36d">phys_allocated</a> [PHYS_MAX_BLOCKS]</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Array che contiene le allocazioni. <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="84ba49101a8b7651af2d022b80208840"></a><!-- doxytag: member="phys.h::phys_bitmap" ref="84ba49101a8b7651af2d022b80208840" args="[PHYS_MAX_PAGE]" -->
unsigned&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="phys_8h.html#84ba49101a8b7651af2d022b80208840">phys_bitmap</a> [PHYS_MAX_PAGE]</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">La bitmap della memoria fisica. <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="4aac176eecd5456a57e67bc5fce4d5e0"></a><!-- doxytag: member="phys.h::phys_page_number" ref="4aac176eecd5456a57e67bc5fce4d5e0" args="" -->
unsigned&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="phys_8h.html#4aac176eecd5456a57e67bc5fce4d5e0">phys_page_number</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Numero di pagine. <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="4fd9516e3618bb66143776f37f7fb517"></a><!-- doxytag: member="phys.h::phys_total" ref="4fd9516e3618bb66143776f37f7fb517" args="" -->
uint32_t&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="phys_8h.html#4fd9516e3618bb66143776f37f7fb517">phys_total</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Totale memoria del sistema. <br></td></tr>
</table>
<hr><a name="_details"></a><h2>Detailed Description</h2>
<dl class="author" compact><dt><b>Author:</b></dt><dd>Davide Gessa </dd></dl>
<dl class="date" compact><dt><b>Date:</b></dt><dd>10-12-09 </dd></dl>
<hr><h2>Function Documentation</h2>
<a class="anchor" name="75d8151ab1dd7fccb53f690d74d3332b"></a><!-- doxytag: member="phys.h::phys_alloc" ref="75d8151ab1dd7fccb53f690d74d3332b" args="(size_t)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void* phys_alloc           </td>
          <td>(</td>
          <td class="paramtype">size_t&nbsp;</td>
          <td class="paramname"> <em>size</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Alloca delle pagine di memoria fisica<p>
<dl class="note" compact><dt><b>Note:</b></dt><dd>bisogna implementare un algoritmo che effettivamente cerchi prima l'area dello spazio richiesto </dd></dl>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>size</em>&nbsp;</td><td>pagine da allocare </td></tr>
  </table>
</dl>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>area allocata </dd></dl>

</div>
</div><p>
<a class="anchor" name="cbdd7f6d2c8e03885537bf943b7fadd3"></a><!-- doxytag: member="phys.h::phys_first_free_alloc" ref="cbdd7f6d2c8e03885537bf943b7fadd3" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint32_t phys_first_free_alloc           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Trova il primo spazio libero nella tabella delle allocazioni<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>spazio libero </dd></dl>

</div>
</div><p>
<a class="anchor" name="2bc5fb88d91ad15852998d3f6fa4294f"></a><!-- doxytag: member="phys.h::phys_free" ref="2bc5fb88d91ad15852998d3f6fa4294f" args="(void *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void phys_free           </td>
          <td>(</td>
          <td class="paramtype">void *&nbsp;</td>
          <td class="paramname"> <em>addr</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Libera delle pagine di memoria fisica<p>
<dl class="note" compact><dt><b>Note:</b></dt><dd>non funziona </dd></dl>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>addr</em>&nbsp;</td><td>area da liberare </td></tr>
  </table>
</dl>

</div>
</div><p>
<a class="anchor" name="76b96b96fbb39336031f7e66427587b0"></a><!-- doxytag: member="phys.h::phys_get_free_pages" ref="76b96b96fbb39336031f7e66427587b0" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint32_t phys_get_free_pages           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Restituisce il numero di pagine usate<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>numero delle pagine libere </dd></dl>

</div>
</div><p>
<a class="anchor" name="0ec60603a07c9183794e1e78f4cff16b"></a><!-- doxytag: member="phys.h::phys_if_free_page" ref="0ec60603a07c9183794e1e78f4cff16b" args="(int *, int *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint8_t phys_if_free_page           </td>
          <td>(</td>
          <td class="paramtype">int *&nbsp;</td>
          <td class="paramname"> <em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int *&nbsp;</td>
          <td class="paramname"> <em>y</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Ci dice se la pagina dopo x e y degli argomenti e' libera e aggiorna x e y in caso positivo<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>x</em>&nbsp;</td><td>bitmap ascisse </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>y</em>&nbsp;</td><td>bitmap ordinate </td></tr>
  </table>
</dl>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>stato del bit </dd></dl>

</div>
</div><p>
<a class="anchor" name="c7743ad5a4365afccfb4b282fe29b1a6"></a><!-- doxytag: member="phys.h::phys_reserve" ref="c7743ad5a4365afccfb4b282fe29b1a6" args="(uint32_t, uint32_t)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void phys_reserve           </td>
          <td>(</td>
          <td class="paramtype">uint32_t&nbsp;</td>
          <td class="paramname"> <em>start</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&nbsp;</td>
          <td class="paramname"> <em>end</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Riserva della memoria<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>start</em>&nbsp;</td><td>inizio area </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>end</em>&nbsp;</td><td>fine area </td></tr>
  </table>
</dl>

</div>
</div><p>
</div>
<hr size="1"><address style="text-align: right;"><small>Generated on Fri Feb 19 23:18:37 2010 for SpiderPig by&nbsp;
<a href="http://www.doxygen.org/index.html">
<img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.5.8 </small></address>
</body>
</html>
