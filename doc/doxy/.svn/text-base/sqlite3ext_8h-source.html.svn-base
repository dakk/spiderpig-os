<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=UTF-8">
<title>SpiderPig: src/kernel/driver/db/sqlite3ext.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css">
<link href="doxygen.css" rel="stylesheet" type="text/css">
</head><body>
<!-- Generated by Doxygen 1.5.8 -->
<div class="navigation" id="top">
  <div class="tabs">
    <ul>
      <li><a href="index.html"><span>Main&nbsp;Page</span></a></li>
      <li><a href="annotated.html"><span>Classes</span></a></li>
      <li class="current"><a href="files.html"><span>Files</span></a></li>
    </ul>
  </div>
  <div class="tabs">
    <ul>
      <li><a href="files.html"><span>File&nbsp;List</span></a></li>
      <li><a href="globals.html"><span>File&nbsp;Members</span></a></li>
    </ul>
  </div>
<h1>src/kernel/driver/db/sqlite3ext.h</h1><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">/*</span>
<a name="l00002"></a>00002 <span class="comment">** 2006 June 7</span>
<a name="l00003"></a>00003 <span class="comment">**</span>
<a name="l00004"></a>00004 <span class="comment">** The author disclaims copyright to this source code.  In place of</span>
<a name="l00005"></a>00005 <span class="comment">** a legal notice, here is a blessing:</span>
<a name="l00006"></a>00006 <span class="comment">**</span>
<a name="l00007"></a>00007 <span class="comment">**    May you do good and not evil.</span>
<a name="l00008"></a>00008 <span class="comment">**    May you find forgiveness for yourself and forgive others.</span>
<a name="l00009"></a>00009 <span class="comment">**    May you share freely, never taking more than you give.</span>
<a name="l00010"></a>00010 <span class="comment">**</span>
<a name="l00011"></a>00011 <span class="comment">*************************************************************************</span>
<a name="l00012"></a>00012 <span class="comment">** This header file defines the SQLite interface for use by</span>
<a name="l00013"></a>00013 <span class="comment">** shared libraries that want to be imported as extensions into</span>
<a name="l00014"></a>00014 <span class="comment">** an SQLite instance.  Shared libraries that intend to be loaded</span>
<a name="l00015"></a>00015 <span class="comment">** as extensions by SQLite should #include this file instead of </span>
<a name="l00016"></a>00016 <span class="comment">** sqlite3.h.</span>
<a name="l00017"></a>00017 <span class="comment">*/</span>
<a name="l00018"></a>00018 <span class="preprocessor">#ifndef _SQLITE3EXT_H_</span>
<a name="l00019"></a>00019 <span class="preprocessor"></span><span class="preprocessor">#define _SQLITE3EXT_H_</span>
<a name="l00020"></a>00020 <span class="preprocessor"></span><span class="preprocessor">#include "sqlite3.h"</span>
<a name="l00021"></a>00021 
<a name="l00022"></a>00022 <span class="keyword">typedef</span> <span class="keyword">struct </span>sqlite3_api_routines sqlite3_api_routines;
<a name="l00023"></a>00023 
<a name="l00024"></a>00024 <span class="comment">/*</span>
<a name="l00025"></a>00025 <span class="comment">** The following structure holds pointers to all of the SQLite API</span>
<a name="l00026"></a>00026 <span class="comment">** routines.</span>
<a name="l00027"></a>00027 <span class="comment">**</span>
<a name="l00028"></a>00028 <span class="comment">** WARNING:  In order to maintain backwards compatibility, add new</span>
<a name="l00029"></a>00029 <span class="comment">** interfaces to the end of this structure only.  If you insert new</span>
<a name="l00030"></a>00030 <span class="comment">** interfaces in the middle of this structure, then older different</span>
<a name="l00031"></a>00031 <span class="comment">** versions of SQLite will not be able to load each others' shared</span>
<a name="l00032"></a>00032 <span class="comment">** libraries!</span>
<a name="l00033"></a>00033 <span class="comment">*/</span>
<a name="l00034"></a>00034 <span class="keyword">struct </span>sqlite3_api_routines {
<a name="l00035"></a>00035   <span class="keywordtype">void</span> * (*aggregate_context)(sqlite3_context*,<span class="keywordtype">int</span> nBytes);
<a name="l00036"></a>00036   int  (*aggregate_count)(sqlite3_context*);
<a name="l00037"></a>00037   int  (*bind_blob)(sqlite3_stmt*,int,<span class="keyword">const</span> <span class="keywordtype">void</span>*,<span class="keywordtype">int</span> n,void(*)(<span class="keywordtype">void</span>*));
<a name="l00038"></a>00038   int  (*bind_double)(sqlite3_stmt*,int,double);
<a name="l00039"></a>00039   int  (*bind_int)(sqlite3_stmt*,int,int);
<a name="l00040"></a>00040   int  (*bind_int64)(sqlite3_stmt*,int,sqlite_int64);
<a name="l00041"></a>00041   int  (*bind_null)(sqlite3_stmt*,int);
<a name="l00042"></a>00042   int  (*bind_parameter_count)(sqlite3_stmt*);
<a name="l00043"></a>00043   int  (*bind_parameter_index)(sqlite3_stmt*,<span class="keyword">const</span> <span class="keywordtype">char</span>*zName);
<a name="l00044"></a>00044   <span class="keyword">const</span> <span class="keywordtype">char</span> * (*bind_parameter_name)(sqlite3_stmt*,int);
<a name="l00045"></a>00045   int  (*bind_text)(sqlite3_stmt*,int,<span class="keyword">const</span> <span class="keywordtype">char</span>*,<span class="keywordtype">int</span> n,void(*)(<span class="keywordtype">void</span>*));
<a name="l00046"></a>00046   int  (*bind_text16)(sqlite3_stmt*,int,<span class="keyword">const</span> <span class="keywordtype">void</span>*,int,void(*)(<span class="keywordtype">void</span>*));
<a name="l00047"></a>00047   int  (*bind_value)(sqlite3_stmt*,int,<span class="keyword">const</span> sqlite3_value*);
<a name="l00048"></a>00048   int  (*busy_handler)(sqlite3*,int(*)(<span class="keywordtype">void</span>*,int),<span class="keywordtype">void</span>*);
<a name="l00049"></a>00049   int  (*busy_timeout)(sqlite3*,<span class="keywordtype">int</span> ms);
<a name="l00050"></a>00050   int  (*changes)(sqlite3*);
<a name="l00051"></a>00051   int  (*close)(sqlite3*);
<a name="l00052"></a>00052   int  (*collation_needed)(sqlite3*,<span class="keywordtype">void</span>*,void(*)(<span class="keywordtype">void</span>*,sqlite3*,<span class="keywordtype">int</span> eTextRep,<span class="keyword">const</span> <span class="keywordtype">char</span>*));
<a name="l00053"></a>00053   int  (*collation_needed16)(sqlite3*,<span class="keywordtype">void</span>*,void(*)(<span class="keywordtype">void</span>*,sqlite3*,<span class="keywordtype">int</span> eTextRep,<span class="keyword">const</span> <span class="keywordtype">void</span>*));
<a name="l00054"></a>00054   <span class="keyword">const</span> <span class="keywordtype">void</span> * (*column_blob)(sqlite3_stmt*,<span class="keywordtype">int</span> iCol);
<a name="l00055"></a>00055   int  (*column_bytes)(sqlite3_stmt*,<span class="keywordtype">int</span> iCol);
<a name="l00056"></a>00056   int  (*column_bytes16)(sqlite3_stmt*,<span class="keywordtype">int</span> iCol);
<a name="l00057"></a>00057   int  (*column_count)(sqlite3_stmt*pStmt);
<a name="l00058"></a>00058   <span class="keyword">const</span> <span class="keywordtype">char</span> * (*column_database_name)(sqlite3_stmt*,int);
<a name="l00059"></a>00059   <span class="keyword">const</span> <span class="keywordtype">void</span> * (*column_database_name16)(sqlite3_stmt*,int);
<a name="l00060"></a>00060   <span class="keyword">const</span> <span class="keywordtype">char</span> * (*column_decltype)(sqlite3_stmt*,<span class="keywordtype">int</span> i);
<a name="l00061"></a>00061   <span class="keyword">const</span> <span class="keywordtype">void</span> * (*column_decltype16)(sqlite3_stmt*,int);
<a name="l00062"></a>00062   double  (*column_double)(sqlite3_stmt*,<span class="keywordtype">int</span> iCol);
<a name="l00063"></a>00063   int  (*column_int)(sqlite3_stmt*,<span class="keywordtype">int</span> iCol);
<a name="l00064"></a>00064   sqlite_int64  (*column_int64)(sqlite3_stmt*,<span class="keywordtype">int</span> iCol);
<a name="l00065"></a>00065   <span class="keyword">const</span> <span class="keywordtype">char</span> * (*column_name)(sqlite3_stmt*,int);
<a name="l00066"></a>00066   <span class="keyword">const</span> <span class="keywordtype">void</span> * (*column_name16)(sqlite3_stmt*,int);
<a name="l00067"></a>00067   <span class="keyword">const</span> <span class="keywordtype">char</span> * (*column_origin_name)(sqlite3_stmt*,int);
<a name="l00068"></a>00068   <span class="keyword">const</span> <span class="keywordtype">void</span> * (*column_origin_name16)(sqlite3_stmt*,int);
<a name="l00069"></a>00069   <span class="keyword">const</span> <span class="keywordtype">char</span> * (*column_table_name)(sqlite3_stmt*,int);
<a name="l00070"></a>00070   <span class="keyword">const</span> <span class="keywordtype">void</span> * (*column_table_name16)(sqlite3_stmt*,int);
<a name="l00071"></a>00071   <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> * (*column_text)(sqlite3_stmt*,<span class="keywordtype">int</span> iCol);
<a name="l00072"></a>00072   <span class="keyword">const</span> <span class="keywordtype">void</span> * (*column_text16)(sqlite3_stmt*,<span class="keywordtype">int</span> iCol);
<a name="l00073"></a>00073   int  (*column_type)(sqlite3_stmt*,<span class="keywordtype">int</span> iCol);
<a name="l00074"></a>00074   sqlite3_value* (*column_value)(sqlite3_stmt*,<span class="keywordtype">int</span> iCol);
<a name="l00075"></a>00075   <span class="keywordtype">void</span> * (*commit_hook)(sqlite3*,int(*)(<span class="keywordtype">void</span>*),<span class="keywordtype">void</span>*);
<a name="l00076"></a>00076   int  (*complete)(<span class="keyword">const</span> <span class="keywordtype">char</span>*sql);
<a name="l00077"></a>00077   int  (*complete16)(<span class="keyword">const</span> <span class="keywordtype">void</span>*sql);
<a name="l00078"></a>00078   int  (*create_collation)(sqlite3*,<span class="keyword">const</span> <span class="keywordtype">char</span>*,int,<span class="keywordtype">void</span>*,int(*)(<span class="keywordtype">void</span>*,int,<span class="keyword">const</span> <span class="keywordtype">void</span>*,int,<span class="keyword">const</span> <span class="keywordtype">void</span>*));
<a name="l00079"></a>00079   int  (*create_collation16)(sqlite3*,<span class="keyword">const</span> <span class="keywordtype">void</span>*,int,<span class="keywordtype">void</span>*,int(*)(<span class="keywordtype">void</span>*,int,<span class="keyword">const</span> <span class="keywordtype">void</span>*,int,<span class="keyword">const</span> <span class="keywordtype">void</span>*));
<a name="l00080"></a>00080   int  (*create_function)(sqlite3*,<span class="keyword">const</span> <span class="keywordtype">char</span>*,int,int,<span class="keywordtype">void</span>*,void (*xFunc)(sqlite3_context*,int,sqlite3_value**),<span class="keywordtype">void</span> (*xStep)(sqlite3_context*,int,sqlite3_value**),<span class="keywordtype">void</span> (*xFinal)(sqlite3_context*));
<a name="l00081"></a>00081   int  (*create_function16)(sqlite3*,<span class="keyword">const</span> <span class="keywordtype">void</span>*,int,int,<span class="keywordtype">void</span>*,void (*xFunc)(sqlite3_context*,int,sqlite3_value**),<span class="keywordtype">void</span> (*xStep)(sqlite3_context*,int,sqlite3_value**),<span class="keywordtype">void</span> (*xFinal)(sqlite3_context*));
<a name="l00082"></a>00082   int (*create_module)(sqlite3*,<span class="keyword">const</span> <span class="keywordtype">char</span>*,<span class="keyword">const</span> sqlite3_module*,<span class="keywordtype">void</span>*);
<a name="l00083"></a>00083   int  (*data_count)(sqlite3_stmt*pStmt);
<a name="l00084"></a>00084   sqlite3 * (*db_handle)(sqlite3_stmt*);
<a name="l00085"></a>00085   int (*declare_vtab)(sqlite3*,<span class="keyword">const</span> <span class="keywordtype">char</span>*);
<a name="l00086"></a>00086   int  (*enable_shared_cache)(int);
<a name="l00087"></a>00087   int  (*errcode)(sqlite3*db);
<a name="l00088"></a>00088   <span class="keyword">const</span> <span class="keywordtype">char</span> * (*errmsg)(sqlite3*);
<a name="l00089"></a>00089   <span class="keyword">const</span> <span class="keywordtype">void</span> * (*errmsg16)(sqlite3*);
<a name="l00090"></a>00090   int  (*exec)(sqlite3*,<span class="keyword">const</span> <span class="keywordtype">char</span>*,sqlite3_callback,<span class="keywordtype">void</span>*,<span class="keywordtype">char</span>**);
<a name="l00091"></a>00091   int  (*expired)(sqlite3_stmt*);
<a name="l00092"></a>00092   int  (*finalize)(sqlite3_stmt*pStmt);
<a name="l00093"></a>00093   void  (*free)(<span class="keywordtype">void</span>*);
<a name="l00094"></a>00094   void  (*free_table)(<span class="keywordtype">char</span>**result);
<a name="l00095"></a>00095   int  (*get_autocommit)(sqlite3*);
<a name="l00096"></a>00096   <span class="keywordtype">void</span> * (*get_auxdata)(sqlite3_context*,int);
<a name="l00097"></a>00097   int  (*get_table)(sqlite3*,<span class="keyword">const</span> <span class="keywordtype">char</span>*,<span class="keywordtype">char</span>***,<span class="keywordtype">int</span>*,<span class="keywordtype">int</span>*,<span class="keywordtype">char</span>**);
<a name="l00098"></a>00098   int  (*global_recover)(void);
<a name="l00099"></a>00099   void  (*interruptx)(sqlite3*);
<a name="l00100"></a>00100   sqlite_int64  (*last_insert_rowid)(sqlite3*);
<a name="l00101"></a>00101   <span class="keyword">const</span> <span class="keywordtype">char</span> * (*libversion)(void);
<a name="l00102"></a>00102   int  (*libversion_number)(void);
<a name="l00103"></a>00103   <span class="keywordtype">void</span> *(*malloc)(int);
<a name="l00104"></a>00104   <span class="keywordtype">char</span> * (*mprintf)(<span class="keyword">const</span> <span class="keywordtype">char</span>*,...);
<a name="l00105"></a>00105   int  (*open)(<span class="keyword">const</span> <span class="keywordtype">char</span>*,sqlite3**);
<a name="l00106"></a>00106   int  (*open16)(<span class="keyword">const</span> <span class="keywordtype">void</span>*,sqlite3**);
<a name="l00107"></a>00107   int  (*prepare)(sqlite3*,<span class="keyword">const</span> <span class="keywordtype">char</span>*,int,sqlite3_stmt**,<span class="keyword">const</span> <span class="keywordtype">char</span>**);
<a name="l00108"></a>00108   int  (*prepare16)(sqlite3*,<span class="keyword">const</span> <span class="keywordtype">void</span>*,int,sqlite3_stmt**,<span class="keyword">const</span> <span class="keywordtype">void</span>**);
<a name="l00109"></a>00109   <span class="keywordtype">void</span> * (*profile)(sqlite3*,void(*)(<span class="keywordtype">void</span>*,<span class="keyword">const</span> <span class="keywordtype">char</span>*,sqlite_uint64),<span class="keywordtype">void</span>*);
<a name="l00110"></a>00110   void  (*progress_handler)(sqlite3*,int,int(*)(<span class="keywordtype">void</span>*),<span class="keywordtype">void</span>*);
<a name="l00111"></a>00111   <span class="keywordtype">void</span> *(*realloc)(<span class="keywordtype">void</span>*,int);
<a name="l00112"></a>00112   int  (*reset)(sqlite3_stmt*pStmt);
<a name="l00113"></a>00113   void  (*result_blob)(sqlite3_context*,<span class="keyword">const</span> <span class="keywordtype">void</span>*,int,void(*)(<span class="keywordtype">void</span>*));
<a name="l00114"></a>00114   void  (*result_double)(sqlite3_context*,double);
<a name="l00115"></a>00115   void  (*result_error)(sqlite3_context*,<span class="keyword">const</span> <span class="keywordtype">char</span>*,int);
<a name="l00116"></a>00116   void  (*result_error16)(sqlite3_context*,<span class="keyword">const</span> <span class="keywordtype">void</span>*,int);
<a name="l00117"></a>00117   void  (*result_int)(sqlite3_context*,int);
<a name="l00118"></a>00118   void  (*result_int64)(sqlite3_context*,sqlite_int64);
<a name="l00119"></a>00119   void  (*result_null)(sqlite3_context*);
<a name="l00120"></a>00120   void  (*result_text)(sqlite3_context*,<span class="keyword">const</span> <span class="keywordtype">char</span>*,int,void(*)(<span class="keywordtype">void</span>*));
<a name="l00121"></a>00121   void  (*result_text16)(sqlite3_context*,<span class="keyword">const</span> <span class="keywordtype">void</span>*,int,void(*)(<span class="keywordtype">void</span>*));
<a name="l00122"></a>00122   void  (*result_text16be)(sqlite3_context*,<span class="keyword">const</span> <span class="keywordtype">void</span>*,int,void(*)(<span class="keywordtype">void</span>*));
<a name="l00123"></a>00123   void  (*result_text16le)(sqlite3_context*,<span class="keyword">const</span> <span class="keywordtype">void</span>*,int,void(*)(<span class="keywordtype">void</span>*));
<a name="l00124"></a>00124   void  (*result_value)(sqlite3_context*,sqlite3_value*);
<a name="l00125"></a>00125   <span class="keywordtype">void</span> * (*rollback_hook)(sqlite3*,void(*)(<span class="keywordtype">void</span>*),<span class="keywordtype">void</span>*);
<a name="l00126"></a>00126   int  (*set_authorizer)(sqlite3*,int(*)(<span class="keywordtype">void</span>*,int,<span class="keyword">const</span> <span class="keywordtype">char</span>*,<span class="keyword">const</span> <span class="keywordtype">char</span>*,<span class="keyword">const</span> <span class="keywordtype">char</span>*,<span class="keyword">const</span> <span class="keywordtype">char</span>*),<span class="keywordtype">void</span>*);
<a name="l00127"></a>00127   void  (*set_auxdata)(sqlite3_context*,int,<span class="keywordtype">void</span>*,void (*)(<span class="keywordtype">void</span>*));
<a name="l00128"></a>00128   <span class="keywordtype">char</span> * (*snprintf)(int,<span class="keywordtype">char</span>*,<span class="keyword">const</span> <span class="keywordtype">char</span>*,...);
<a name="l00129"></a>00129   int  (*step)(sqlite3_stmt*);
<a name="l00130"></a>00130   int  (*table_column_metadata)(sqlite3*,<span class="keyword">const</span> <span class="keywordtype">char</span>*,<span class="keyword">const</span> <span class="keywordtype">char</span>*,<span class="keyword">const</span> <span class="keywordtype">char</span>*,<span class="keywordtype">char</span> <span class="keyword">const</span>**,<span class="keywordtype">char</span> <span class="keyword">const</span>**,<span class="keywordtype">int</span>*,<span class="keywordtype">int</span>*,<span class="keywordtype">int</span>*);
<a name="l00131"></a>00131   void  (*thread_cleanup)(void);
<a name="l00132"></a>00132   int  (*total_changes)(sqlite3*);
<a name="l00133"></a>00133   <span class="keywordtype">void</span> * (*trace)(sqlite3*,void(*xTrace)(<span class="keywordtype">void</span>*,<span class="keyword">const</span> <span class="keywordtype">char</span>*),<span class="keywordtype">void</span>*);
<a name="l00134"></a>00134   int  (*transfer_bindings)(sqlite3_stmt*,sqlite3_stmt*);
<a name="l00135"></a>00135   <span class="keywordtype">void</span> * (*update_hook)(sqlite3*,void(*)(<span class="keywordtype">void</span>*,int ,<span class="keywordtype">char</span> <span class="keyword">const</span>*,<span class="keywordtype">char</span> <span class="keyword">const</span>*,sqlite_int64),<span class="keywordtype">void</span>*);
<a name="l00136"></a>00136   <span class="keywordtype">void</span> * (*user_data)(sqlite3_context*);
<a name="l00137"></a>00137   <span class="keyword">const</span> <span class="keywordtype">void</span> * (*value_blob)(sqlite3_value*);
<a name="l00138"></a>00138   int  (*value_bytes)(sqlite3_value*);
<a name="l00139"></a>00139   int  (*value_bytes16)(sqlite3_value*);
<a name="l00140"></a>00140   double  (*value_double)(sqlite3_value*);
<a name="l00141"></a>00141   int  (*value_int)(sqlite3_value*);
<a name="l00142"></a>00142   sqlite_int64  (*value_int64)(sqlite3_value*);
<a name="l00143"></a>00143   int  (*value_numeric_type)(sqlite3_value*);
<a name="l00144"></a>00144   <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> * (*value_text)(sqlite3_value*);
<a name="l00145"></a>00145   <span class="keyword">const</span> <span class="keywordtype">void</span> * (*value_text16)(sqlite3_value*);
<a name="l00146"></a>00146   <span class="keyword">const</span> <span class="keywordtype">void</span> * (*value_text16be)(sqlite3_value*);
<a name="l00147"></a>00147   <span class="keyword">const</span> <span class="keywordtype">void</span> * (*value_text16le)(sqlite3_value*);
<a name="l00148"></a>00148   int  (*value_type)(sqlite3_value*);
<a name="l00149"></a>00149   <span class="keywordtype">char</span> *(*vmprintf)(<span class="keyword">const</span> <span class="keywordtype">char</span>*,<a class="code" href="stdarg_8h.html#8bb1b91285fc43d7f11506e86074741a">va_list</a>);
<a name="l00150"></a>00150   <span class="comment">/* Added ??? */</span>
<a name="l00151"></a>00151   int (*overload_function)(sqlite3*, <span class="keyword">const</span> <span class="keywordtype">char</span> *zFuncName, <span class="keywordtype">int</span> nArg);
<a name="l00152"></a>00152   <span class="comment">/* Added by 3.3.13 */</span>
<a name="l00153"></a>00153   int (*prepare_v2)(sqlite3*,<span class="keyword">const</span> <span class="keywordtype">char</span>*,int,sqlite3_stmt**,<span class="keyword">const</span> <span class="keywordtype">char</span>**);
<a name="l00154"></a>00154   int (*prepare16_v2)(sqlite3*,<span class="keyword">const</span> <span class="keywordtype">void</span>*,int,sqlite3_stmt**,<span class="keyword">const</span> <span class="keywordtype">void</span>**);
<a name="l00155"></a>00155   int (*clear_bindings)(sqlite3_stmt*);
<a name="l00156"></a>00156   <span class="comment">/* Added by 3.4.1 */</span>
<a name="l00157"></a>00157   int (*create_module_v2)(sqlite3*,<span class="keyword">const</span> <span class="keywordtype">char</span>*,<span class="keyword">const</span> sqlite3_module*,<span class="keywordtype">void</span>*,void (*xDestroy)(<span class="keywordtype">void</span> *));
<a name="l00158"></a>00158   <span class="comment">/* Added by 3.5.0 */</span>
<a name="l00159"></a>00159   int (*bind_zeroblob)(sqlite3_stmt*,int,int);
<a name="l00160"></a>00160   int (*blob_bytes)(sqlite3_blob*);
<a name="l00161"></a>00161   int (*blob_close)(sqlite3_blob*);
<a name="l00162"></a>00162   int (*blob_open)(sqlite3*,<span class="keyword">const</span> <span class="keywordtype">char</span>*,<span class="keyword">const</span> <span class="keywordtype">char</span>*,<span class="keyword">const</span> <span class="keywordtype">char</span>*,sqlite3_int64,int,sqlite3_blob**);
<a name="l00163"></a>00163   int (*blob_read)(sqlite3_blob*,<span class="keywordtype">void</span>*,int,int);
<a name="l00164"></a>00164   int (*blob_write)(sqlite3_blob*,<span class="keyword">const</span> <span class="keywordtype">void</span>*,int,int);
<a name="l00165"></a>00165   int (*create_collation_v2)(sqlite3*,<span class="keyword">const</span> <span class="keywordtype">char</span>*,int,<span class="keywordtype">void</span>*,int(*)(<span class="keywordtype">void</span>*,int,<span class="keyword">const</span> <span class="keywordtype">void</span>*,int,<span class="keyword">const</span> <span class="keywordtype">void</span>*),<span class="keywordtype">void</span>(*)(<span class="keywordtype">void</span>*));
<a name="l00166"></a>00166   int (*file_control)(sqlite3*,<span class="keyword">const</span> <span class="keywordtype">char</span>*,int,<span class="keywordtype">void</span>*);
<a name="l00167"></a>00167   sqlite3_int64 (*memory_highwater)(int);
<a name="l00168"></a>00168   sqlite3_int64 (*memory_used)(void);
<a name="l00169"></a>00169   sqlite3_mutex *(*mutex_alloc)(int);
<a name="l00170"></a>00170   void (*mutex_enter)(sqlite3_mutex*);
<a name="l00171"></a>00171   void (*mutex_free)(sqlite3_mutex*);
<a name="l00172"></a>00172   void (*mutex_leave)(sqlite3_mutex*);
<a name="l00173"></a>00173   int (*mutex_try)(sqlite3_mutex*);
<a name="l00174"></a>00174   int (*open_v2)(<span class="keyword">const</span> <span class="keywordtype">char</span>*,sqlite3**,int,<span class="keyword">const</span> <span class="keywordtype">char</span>*);
<a name="l00175"></a>00175   int (*release_memory)(int);
<a name="l00176"></a>00176   void (*result_error_nomem)(sqlite3_context*);
<a name="l00177"></a>00177   void (*result_error_toobig)(sqlite3_context*);
<a name="l00178"></a>00178   int (*sleep)(int);
<a name="l00179"></a>00179   void (*soft_heap_limit)(int);
<a name="l00180"></a>00180   sqlite3_vfs *(*vfs_find)(<span class="keyword">const</span> <span class="keywordtype">char</span>*);
<a name="l00181"></a>00181   int (*vfs_register)(sqlite3_vfs*,int);
<a name="l00182"></a>00182   int (*vfs_unregister)(sqlite3_vfs*);
<a name="l00183"></a>00183   int (*xthreadsafe)(void);
<a name="l00184"></a>00184   void (*result_zeroblob)(sqlite3_context*,int);
<a name="l00185"></a>00185   void (*result_error_code)(sqlite3_context*,int);
<a name="l00186"></a>00186   int (*test_control)(int, ...);
<a name="l00187"></a>00187   void (*randomness)(int,<span class="keywordtype">void</span>*);
<a name="l00188"></a>00188   sqlite3 *(*context_db_handle)(sqlite3_context*);
<a name="l00189"></a>00189   int (*extended_result_codes)(sqlite3*,int);
<a name="l00190"></a>00190   int (*limit)(sqlite3*,int,int);
<a name="l00191"></a>00191   sqlite3_stmt *(*next_stmt)(sqlite3*,sqlite3_stmt*);
<a name="l00192"></a>00192   <span class="keyword">const</span> <span class="keywordtype">char</span> *(*sql)(sqlite3_stmt*);
<a name="l00193"></a>00193   int (*status)(int,<span class="keywordtype">int</span>*,<span class="keywordtype">int</span>*,int);
<a name="l00194"></a>00194 };
<a name="l00195"></a>00195 
<a name="l00196"></a>00196 <span class="comment">/*</span>
<a name="l00197"></a>00197 <span class="comment">** The following macros redefine the API routines so that they are</span>
<a name="l00198"></a>00198 <span class="comment">** redirected throught the global sqlite3_api structure.</span>
<a name="l00199"></a>00199 <span class="comment">**</span>
<a name="l00200"></a>00200 <span class="comment">** This header file is also used by the loadext.c source file</span>
<a name="l00201"></a>00201 <span class="comment">** (part of the main SQLite library - not an extension) so that</span>
<a name="l00202"></a>00202 <span class="comment">** it can get access to the sqlite3_api_routines structure</span>
<a name="l00203"></a>00203 <span class="comment">** definition.  But the main library does not want to redefine</span>
<a name="l00204"></a>00204 <span class="comment">** the API.  So the redefinition macros are only valid if the</span>
<a name="l00205"></a>00205 <span class="comment">** SQLITE_CORE macros is undefined.</span>
<a name="l00206"></a>00206 <span class="comment">*/</span>
<a name="l00207"></a>00207 <span class="preprocessor">#ifndef SQLITE_CORE</span>
<a name="l00208"></a>00208 <span class="preprocessor"></span><span class="preprocessor">#define sqlite3_aggregate_context      sqlite3_api-&gt;aggregate_context</span>
<a name="l00209"></a>00209 <span class="preprocessor"></span><span class="preprocessor">#ifndef SQLITE_OMIT_DEPRECATED</span>
<a name="l00210"></a>00210 <span class="preprocessor"></span><span class="preprocessor">#define sqlite3_aggregate_count        sqlite3_api-&gt;aggregate_count</span>
<a name="l00211"></a>00211 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
<a name="l00212"></a>00212 <span class="preprocessor"></span><span class="preprocessor">#define sqlite3_bind_blob              sqlite3_api-&gt;bind_blob</span>
<a name="l00213"></a>00213 <span class="preprocessor"></span><span class="preprocessor">#define sqlite3_bind_double            sqlite3_api-&gt;bind_double</span>
<a name="l00214"></a>00214 <span class="preprocessor"></span><span class="preprocessor">#define sqlite3_bind_int               sqlite3_api-&gt;bind_int</span>
<a name="l00215"></a>00215 <span class="preprocessor"></span><span class="preprocessor">#define sqlite3_bind_int64             sqlite3_api-&gt;bind_int64</span>
<a name="l00216"></a>00216 <span class="preprocessor"></span><span class="preprocessor">#define sqlite3_bind_null              sqlite3_api-&gt;bind_null</span>
<a name="l00217"></a>00217 <span class="preprocessor"></span><span class="preprocessor">#define sqlite3_bind_parameter_count   sqlite3_api-&gt;bind_parameter_count</span>
<a name="l00218"></a>00218 <span class="preprocessor"></span><span class="preprocessor">#define sqlite3_bind_parameter_index   sqlite3_api-&gt;bind_parameter_index</span>
<a name="l00219"></a>00219 <span class="preprocessor"></span><span class="preprocessor">#define sqlite3_bind_parameter_name    sqlite3_api-&gt;bind_parameter_name</span>
<a name="l00220"></a>00220 <span class="preprocessor"></span><span class="preprocessor">#define sqlite3_bind_text              sqlite3_api-&gt;bind_text</span>
<a name="l00221"></a>00221 <span class="preprocessor"></span><span class="preprocessor">#define sqlite3_bind_text16            sqlite3_api-&gt;bind_text16</span>
<a name="l00222"></a>00222 <span class="preprocessor"></span><span class="preprocessor">#define sqlite3_bind_value             sqlite3_api-&gt;bind_value</span>
<a name="l00223"></a>00223 <span class="preprocessor"></span><span class="preprocessor">#define sqlite3_busy_handler           sqlite3_api-&gt;busy_handler</span>
<a name="l00224"></a>00224 <span class="preprocessor"></span><span class="preprocessor">#define sqlite3_busy_timeout           sqlite3_api-&gt;busy_timeout</span>
<a name="l00225"></a>00225 <span class="preprocessor"></span><span class="preprocessor">#define sqlite3_changes                sqlite3_api-&gt;changes</span>
<a name="l00226"></a>00226 <span class="preprocessor"></span><span class="preprocessor">#define sqlite3_close                  sqlite3_api-&gt;close</span>
<a name="l00227"></a>00227 <span class="preprocessor"></span><span class="preprocessor">#define sqlite3_collation_needed       sqlite3_api-&gt;collation_needed</span>
<a name="l00228"></a>00228 <span class="preprocessor"></span><span class="preprocessor">#define sqlite3_collation_needed16     sqlite3_api-&gt;collation_needed16</span>
<a name="l00229"></a>00229 <span class="preprocessor"></span><span class="preprocessor">#define sqlite3_column_blob            sqlite3_api-&gt;column_blob</span>
<a name="l00230"></a>00230 <span class="preprocessor"></span><span class="preprocessor">#define sqlite3_column_bytes           sqlite3_api-&gt;column_bytes</span>
<a name="l00231"></a>00231 <span class="preprocessor"></span><span class="preprocessor">#define sqlite3_column_bytes16         sqlite3_api-&gt;column_bytes16</span>
<a name="l00232"></a>00232 <span class="preprocessor"></span><span class="preprocessor">#define sqlite3_column_count           sqlite3_api-&gt;column_count</span>
<a name="l00233"></a>00233 <span class="preprocessor"></span><span class="preprocessor">#define sqlite3_column_database_name   sqlite3_api-&gt;column_database_name</span>
<a name="l00234"></a>00234 <span class="preprocessor"></span><span class="preprocessor">#define sqlite3_column_database_name16 sqlite3_api-&gt;column_database_name16</span>
<a name="l00235"></a>00235 <span class="preprocessor"></span><span class="preprocessor">#define sqlite3_column_decltype        sqlite3_api-&gt;column_decltype</span>
<a name="l00236"></a>00236 <span class="preprocessor"></span><span class="preprocessor">#define sqlite3_column_decltype16      sqlite3_api-&gt;column_decltype16</span>
<a name="l00237"></a>00237 <span class="preprocessor"></span><span class="preprocessor">#define sqlite3_column_double          sqlite3_api-&gt;column_double</span>
<a name="l00238"></a>00238 <span class="preprocessor"></span><span class="preprocessor">#define sqlite3_column_int             sqlite3_api-&gt;column_int</span>
<a name="l00239"></a>00239 <span class="preprocessor"></span><span class="preprocessor">#define sqlite3_column_int64           sqlite3_api-&gt;column_int64</span>
<a name="l00240"></a>00240 <span class="preprocessor"></span><span class="preprocessor">#define sqlite3_column_name            sqlite3_api-&gt;column_name</span>
<a name="l00241"></a>00241 <span class="preprocessor"></span><span class="preprocessor">#define sqlite3_column_name16          sqlite3_api-&gt;column_name16</span>
<a name="l00242"></a>00242 <span class="preprocessor"></span><span class="preprocessor">#define sqlite3_column_origin_name     sqlite3_api-&gt;column_origin_name</span>
<a name="l00243"></a>00243 <span class="preprocessor"></span><span class="preprocessor">#define sqlite3_column_origin_name16   sqlite3_api-&gt;column_origin_name16</span>
<a name="l00244"></a>00244 <span class="preprocessor"></span><span class="preprocessor">#define sqlite3_column_table_name      sqlite3_api-&gt;column_table_name</span>
<a name="l00245"></a>00245 <span class="preprocessor"></span><span class="preprocessor">#define sqlite3_column_table_name16    sqlite3_api-&gt;column_table_name16</span>
<a name="l00246"></a>00246 <span class="preprocessor"></span><span class="preprocessor">#define sqlite3_column_text            sqlite3_api-&gt;column_text</span>
<a name="l00247"></a>00247 <span class="preprocessor"></span><span class="preprocessor">#define sqlite3_column_text16          sqlite3_api-&gt;column_text16</span>
<a name="l00248"></a>00248 <span class="preprocessor"></span><span class="preprocessor">#define sqlite3_column_type            sqlite3_api-&gt;column_type</span>
<a name="l00249"></a>00249 <span class="preprocessor"></span><span class="preprocessor">#define sqlite3_column_value           sqlite3_api-&gt;column_value</span>
<a name="l00250"></a>00250 <span class="preprocessor"></span><span class="preprocessor">#define sqlite3_commit_hook            sqlite3_api-&gt;commit_hook</span>
<a name="l00251"></a>00251 <span class="preprocessor"></span><span class="preprocessor">#define sqlite3_complete               sqlite3_api-&gt;complete</span>
<a name="l00252"></a>00252 <span class="preprocessor"></span><span class="preprocessor">#define sqlite3_complete16             sqlite3_api-&gt;complete16</span>
<a name="l00253"></a>00253 <span class="preprocessor"></span><span class="preprocessor">#define sqlite3_create_collation       sqlite3_api-&gt;create_collation</span>
<a name="l00254"></a>00254 <span class="preprocessor"></span><span class="preprocessor">#define sqlite3_create_collation16     sqlite3_api-&gt;create_collation16</span>
<a name="l00255"></a>00255 <span class="preprocessor"></span><span class="preprocessor">#define sqlite3_create_function        sqlite3_api-&gt;create_function</span>
<a name="l00256"></a>00256 <span class="preprocessor"></span><span class="preprocessor">#define sqlite3_create_function16      sqlite3_api-&gt;create_function16</span>
<a name="l00257"></a>00257 <span class="preprocessor"></span><span class="preprocessor">#define sqlite3_create_module          sqlite3_api-&gt;create_module</span>
<a name="l00258"></a>00258 <span class="preprocessor"></span><span class="preprocessor">#define sqlite3_create_module_v2       sqlite3_api-&gt;create_module_v2</span>
<a name="l00259"></a>00259 <span class="preprocessor"></span><span class="preprocessor">#define sqlite3_data_count             sqlite3_api-&gt;data_count</span>
<a name="l00260"></a>00260 <span class="preprocessor"></span><span class="preprocessor">#define sqlite3_db_handle              sqlite3_api-&gt;db_handle</span>
<a name="l00261"></a>00261 <span class="preprocessor"></span><span class="preprocessor">#define sqlite3_declare_vtab           sqlite3_api-&gt;declare_vtab</span>
<a name="l00262"></a>00262 <span class="preprocessor"></span><span class="preprocessor">#define sqlite3_enable_shared_cache    sqlite3_api-&gt;enable_shared_cache</span>
<a name="l00263"></a>00263 <span class="preprocessor"></span><span class="preprocessor">#define sqlite3_errcode                sqlite3_api-&gt;errcode</span>
<a name="l00264"></a>00264 <span class="preprocessor"></span><span class="preprocessor">#define sqlite3_errmsg                 sqlite3_api-&gt;errmsg</span>
<a name="l00265"></a>00265 <span class="preprocessor"></span><span class="preprocessor">#define sqlite3_errmsg16               sqlite3_api-&gt;errmsg16</span>
<a name="l00266"></a>00266 <span class="preprocessor"></span><span class="preprocessor">#define sqlite3_exec                   sqlite3_api-&gt;exec</span>
<a name="l00267"></a>00267 <span class="preprocessor"></span><span class="preprocessor">#ifndef SQLITE_OMIT_DEPRECATED</span>
<a name="l00268"></a>00268 <span class="preprocessor"></span><span class="preprocessor">#define sqlite3_expired                sqlite3_api-&gt;expired</span>
<a name="l00269"></a>00269 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
<a name="l00270"></a>00270 <span class="preprocessor"></span><span class="preprocessor">#define sqlite3_finalize               sqlite3_api-&gt;finalize</span>
<a name="l00271"></a>00271 <span class="preprocessor"></span><span class="preprocessor">#define sqlite3_free                   sqlite3_api-&gt;free</span>
<a name="l00272"></a>00272 <span class="preprocessor"></span><span class="preprocessor">#define sqlite3_free_table             sqlite3_api-&gt;free_table</span>
<a name="l00273"></a>00273 <span class="preprocessor"></span><span class="preprocessor">#define sqlite3_get_autocommit         sqlite3_api-&gt;get_autocommit</span>
<a name="l00274"></a>00274 <span class="preprocessor"></span><span class="preprocessor">#define sqlite3_get_auxdata            sqlite3_api-&gt;get_auxdata</span>
<a name="l00275"></a>00275 <span class="preprocessor"></span><span class="preprocessor">#define sqlite3_get_table              sqlite3_api-&gt;get_table</span>
<a name="l00276"></a>00276 <span class="preprocessor"></span><span class="preprocessor">#ifndef SQLITE_OMIT_DEPRECATED</span>
<a name="l00277"></a>00277 <span class="preprocessor"></span><span class="preprocessor">#define sqlite3_global_recover         sqlite3_api-&gt;global_recover</span>
<a name="l00278"></a>00278 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
<a name="l00279"></a>00279 <span class="preprocessor"></span><span class="preprocessor">#define sqlite3_interrupt              sqlite3_api-&gt;interruptx</span>
<a name="l00280"></a>00280 <span class="preprocessor"></span><span class="preprocessor">#define sqlite3_last_insert_rowid      sqlite3_api-&gt;last_insert_rowid</span>
<a name="l00281"></a>00281 <span class="preprocessor"></span><span class="preprocessor">#define sqlite3_libversion             sqlite3_api-&gt;libversion</span>
<a name="l00282"></a>00282 <span class="preprocessor"></span><span class="preprocessor">#define sqlite3_libversion_number      sqlite3_api-&gt;libversion_number</span>
<a name="l00283"></a>00283 <span class="preprocessor"></span><span class="preprocessor">#define sqlite3_malloc                 sqlite3_api-&gt;malloc</span>
<a name="l00284"></a>00284 <span class="preprocessor"></span><span class="preprocessor">#define sqlite3_mprintf                sqlite3_api-&gt;mprintf</span>
<a name="l00285"></a>00285 <span class="preprocessor"></span><span class="preprocessor">#define sqlite3_open                   sqlite3_api-&gt;open</span>
<a name="l00286"></a>00286 <span class="preprocessor"></span><span class="preprocessor">#define sqlite3_open16                 sqlite3_api-&gt;open16</span>
<a name="l00287"></a>00287 <span class="preprocessor"></span><span class="preprocessor">#define sqlite3_prepare                sqlite3_api-&gt;prepare</span>
<a name="l00288"></a>00288 <span class="preprocessor"></span><span class="preprocessor">#define sqlite3_prepare16              sqlite3_api-&gt;prepare16</span>
<a name="l00289"></a>00289 <span class="preprocessor"></span><span class="preprocessor">#define sqlite3_prepare_v2             sqlite3_api-&gt;prepare_v2</span>
<a name="l00290"></a>00290 <span class="preprocessor"></span><span class="preprocessor">#define sqlite3_prepare16_v2           sqlite3_api-&gt;prepare16_v2</span>
<a name="l00291"></a>00291 <span class="preprocessor"></span><span class="preprocessor">#define sqlite3_profile                sqlite3_api-&gt;profile</span>
<a name="l00292"></a>00292 <span class="preprocessor"></span><span class="preprocessor">#define sqlite3_progress_handler       sqlite3_api-&gt;progress_handler</span>
<a name="l00293"></a>00293 <span class="preprocessor"></span><span class="preprocessor">#define sqlite3_realloc                sqlite3_api-&gt;realloc</span>
<a name="l00294"></a>00294 <span class="preprocessor"></span><span class="preprocessor">#define sqlite3_reset                  sqlite3_api-&gt;reset</span>
<a name="l00295"></a>00295 <span class="preprocessor"></span><span class="preprocessor">#define sqlite3_result_blob            sqlite3_api-&gt;result_blob</span>
<a name="l00296"></a>00296 <span class="preprocessor"></span><span class="preprocessor">#define sqlite3_result_double          sqlite3_api-&gt;result_double</span>
<a name="l00297"></a>00297 <span class="preprocessor"></span><span class="preprocessor">#define sqlite3_result_error           sqlite3_api-&gt;result_error</span>
<a name="l00298"></a>00298 <span class="preprocessor"></span><span class="preprocessor">#define sqlite3_result_error16         sqlite3_api-&gt;result_error16</span>
<a name="l00299"></a>00299 <span class="preprocessor"></span><span class="preprocessor">#define sqlite3_result_int             sqlite3_api-&gt;result_int</span>
<a name="l00300"></a>00300 <span class="preprocessor"></span><span class="preprocessor">#define sqlite3_result_int64           sqlite3_api-&gt;result_int64</span>
<a name="l00301"></a>00301 <span class="preprocessor"></span><span class="preprocessor">#define sqlite3_result_null            sqlite3_api-&gt;result_null</span>
<a name="l00302"></a>00302 <span class="preprocessor"></span><span class="preprocessor">#define sqlite3_result_text            sqlite3_api-&gt;result_text</span>
<a name="l00303"></a>00303 <span class="preprocessor"></span><span class="preprocessor">#define sqlite3_result_text16          sqlite3_api-&gt;result_text16</span>
<a name="l00304"></a>00304 <span class="preprocessor"></span><span class="preprocessor">#define sqlite3_result_text16be        sqlite3_api-&gt;result_text16be</span>
<a name="l00305"></a>00305 <span class="preprocessor"></span><span class="preprocessor">#define sqlite3_result_text16le        sqlite3_api-&gt;result_text16le</span>
<a name="l00306"></a>00306 <span class="preprocessor"></span><span class="preprocessor">#define sqlite3_result_value           sqlite3_api-&gt;result_value</span>
<a name="l00307"></a>00307 <span class="preprocessor"></span><span class="preprocessor">#define sqlite3_rollback_hook          sqlite3_api-&gt;rollback_hook</span>
<a name="l00308"></a>00308 <span class="preprocessor"></span><span class="preprocessor">#define sqlite3_set_authorizer         sqlite3_api-&gt;set_authorizer</span>
<a name="l00309"></a>00309 <span class="preprocessor"></span><span class="preprocessor">#define sqlite3_set_auxdata            sqlite3_api-&gt;set_auxdata</span>
<a name="l00310"></a>00310 <span class="preprocessor"></span><span class="preprocessor">#define sqlite3_snprintf               sqlite3_api-&gt;snprintf</span>
<a name="l00311"></a>00311 <span class="preprocessor"></span><span class="preprocessor">#define sqlite3_step                   sqlite3_api-&gt;step</span>
<a name="l00312"></a>00312 <span class="preprocessor"></span><span class="preprocessor">#define sqlite3_table_column_metadata  sqlite3_api-&gt;table_column_metadata</span>
<a name="l00313"></a>00313 <span class="preprocessor"></span><span class="preprocessor">#define sqlite3_thread_cleanup         sqlite3_api-&gt;thread_cleanup</span>
<a name="l00314"></a>00314 <span class="preprocessor"></span><span class="preprocessor">#define sqlite3_total_changes          sqlite3_api-&gt;total_changes</span>
<a name="l00315"></a>00315 <span class="preprocessor"></span><span class="preprocessor">#define sqlite3_trace                  sqlite3_api-&gt;trace</span>
<a name="l00316"></a>00316 <span class="preprocessor"></span><span class="preprocessor">#ifndef SQLITE_OMIT_DEPRECATED</span>
<a name="l00317"></a>00317 <span class="preprocessor"></span><span class="preprocessor">#define sqlite3_transfer_bindings      sqlite3_api-&gt;transfer_bindings</span>
<a name="l00318"></a>00318 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
<a name="l00319"></a>00319 <span class="preprocessor"></span><span class="preprocessor">#define sqlite3_update_hook            sqlite3_api-&gt;update_hook</span>
<a name="l00320"></a>00320 <span class="preprocessor"></span><span class="preprocessor">#define sqlite3_user_data              sqlite3_api-&gt;user_data</span>
<a name="l00321"></a>00321 <span class="preprocessor"></span><span class="preprocessor">#define sqlite3_value_blob             sqlite3_api-&gt;value_blob</span>
<a name="l00322"></a>00322 <span class="preprocessor"></span><span class="preprocessor">#define sqlite3_value_bytes            sqlite3_api-&gt;value_bytes</span>
<a name="l00323"></a>00323 <span class="preprocessor"></span><span class="preprocessor">#define sqlite3_value_bytes16          sqlite3_api-&gt;value_bytes16</span>
<a name="l00324"></a>00324 <span class="preprocessor"></span><span class="preprocessor">#define sqlite3_value_double           sqlite3_api-&gt;value_double</span>
<a name="l00325"></a>00325 <span class="preprocessor"></span><span class="preprocessor">#define sqlite3_value_int              sqlite3_api-&gt;value_int</span>
<a name="l00326"></a>00326 <span class="preprocessor"></span><span class="preprocessor">#define sqlite3_value_int64            sqlite3_api-&gt;value_int64</span>
<a name="l00327"></a>00327 <span class="preprocessor"></span><span class="preprocessor">#define sqlite3_value_numeric_type     sqlite3_api-&gt;value_numeric_type</span>
<a name="l00328"></a>00328 <span class="preprocessor"></span><span class="preprocessor">#define sqlite3_value_text             sqlite3_api-&gt;value_text</span>
<a name="l00329"></a>00329 <span class="preprocessor"></span><span class="preprocessor">#define sqlite3_value_text16           sqlite3_api-&gt;value_text16</span>
<a name="l00330"></a>00330 <span class="preprocessor"></span><span class="preprocessor">#define sqlite3_value_text16be         sqlite3_api-&gt;value_text16be</span>
<a name="l00331"></a>00331 <span class="preprocessor"></span><span class="preprocessor">#define sqlite3_value_text16le         sqlite3_api-&gt;value_text16le</span>
<a name="l00332"></a>00332 <span class="preprocessor"></span><span class="preprocessor">#define sqlite3_value_type             sqlite3_api-&gt;value_type</span>
<a name="l00333"></a>00333 <span class="preprocessor"></span><span class="preprocessor">#define sqlite3_vmprintf               sqlite3_api-&gt;vmprintf</span>
<a name="l00334"></a>00334 <span class="preprocessor"></span><span class="preprocessor">#define sqlite3_overload_function      sqlite3_api-&gt;overload_function</span>
<a name="l00335"></a>00335 <span class="preprocessor"></span><span class="preprocessor">#define sqlite3_prepare_v2             sqlite3_api-&gt;prepare_v2</span>
<a name="l00336"></a>00336 <span class="preprocessor"></span><span class="preprocessor">#define sqlite3_prepare16_v2           sqlite3_api-&gt;prepare16_v2</span>
<a name="l00337"></a>00337 <span class="preprocessor"></span><span class="preprocessor">#define sqlite3_clear_bindings         sqlite3_api-&gt;clear_bindings</span>
<a name="l00338"></a>00338 <span class="preprocessor"></span><span class="preprocessor">#define sqlite3_bind_zeroblob          sqlite3_api-&gt;bind_zeroblob</span>
<a name="l00339"></a>00339 <span class="preprocessor"></span><span class="preprocessor">#define sqlite3_blob_bytes             sqlite3_api-&gt;blob_bytes</span>
<a name="l00340"></a>00340 <span class="preprocessor"></span><span class="preprocessor">#define sqlite3_blob_close             sqlite3_api-&gt;blob_close</span>
<a name="l00341"></a>00341 <span class="preprocessor"></span><span class="preprocessor">#define sqlite3_blob_open              sqlite3_api-&gt;blob_open</span>
<a name="l00342"></a>00342 <span class="preprocessor"></span><span class="preprocessor">#define sqlite3_blob_read              sqlite3_api-&gt;blob_read</span>
<a name="l00343"></a>00343 <span class="preprocessor"></span><span class="preprocessor">#define sqlite3_blob_write             sqlite3_api-&gt;blob_write</span>
<a name="l00344"></a>00344 <span class="preprocessor"></span><span class="preprocessor">#define sqlite3_create_collation_v2    sqlite3_api-&gt;create_collation_v2</span>
<a name="l00345"></a>00345 <span class="preprocessor"></span><span class="preprocessor">#define sqlite3_file_control           sqlite3_api-&gt;file_control</span>
<a name="l00346"></a>00346 <span class="preprocessor"></span><span class="preprocessor">#define sqlite3_memory_highwater       sqlite3_api-&gt;memory_highwater</span>
<a name="l00347"></a>00347 <span class="preprocessor"></span><span class="preprocessor">#define sqlite3_memory_used            sqlite3_api-&gt;memory_used</span>
<a name="l00348"></a>00348 <span class="preprocessor"></span><span class="preprocessor">#define sqlite3_mutex_alloc            sqlite3_api-&gt;mutex_alloc</span>
<a name="l00349"></a>00349 <span class="preprocessor"></span><span class="preprocessor">#define sqlite3_mutex_enter            sqlite3_api-&gt;mutex_enter</span>
<a name="l00350"></a>00350 <span class="preprocessor"></span><span class="preprocessor">#define sqlite3_mutex_free             sqlite3_api-&gt;mutex_free</span>
<a name="l00351"></a>00351 <span class="preprocessor"></span><span class="preprocessor">#define sqlite3_mutex_leave            sqlite3_api-&gt;mutex_leave</span>
<a name="l00352"></a>00352 <span class="preprocessor"></span><span class="preprocessor">#define sqlite3_mutex_try              sqlite3_api-&gt;mutex_try</span>
<a name="l00353"></a>00353 <span class="preprocessor"></span><span class="preprocessor">#define sqlite3_open_v2                sqlite3_api-&gt;open_v2</span>
<a name="l00354"></a>00354 <span class="preprocessor"></span><span class="preprocessor">#define sqlite3_release_memory         sqlite3_api-&gt;release_memory</span>
<a name="l00355"></a>00355 <span class="preprocessor"></span><span class="preprocessor">#define sqlite3_result_error_nomem     sqlite3_api-&gt;result_error_nomem</span>
<a name="l00356"></a>00356 <span class="preprocessor"></span><span class="preprocessor">#define sqlite3_result_error_toobig    sqlite3_api-&gt;result_error_toobig</span>
<a name="l00357"></a>00357 <span class="preprocessor"></span><span class="preprocessor">#define sqlite3_sleep                  sqlite3_api-&gt;sleep</span>
<a name="l00358"></a>00358 <span class="preprocessor"></span><span class="preprocessor">#define sqlite3_soft_heap_limit        sqlite3_api-&gt;soft_heap_limit</span>
<a name="l00359"></a>00359 <span class="preprocessor"></span><span class="preprocessor">#define sqlite3_vfs_find               sqlite3_api-&gt;vfs_find</span>
<a name="l00360"></a>00360 <span class="preprocessor"></span><span class="preprocessor">#define sqlite3_vfs_register           sqlite3_api-&gt;vfs_register</span>
<a name="l00361"></a>00361 <span class="preprocessor"></span><span class="preprocessor">#define sqlite3_vfs_unregister         sqlite3_api-&gt;vfs_unregister</span>
<a name="l00362"></a>00362 <span class="preprocessor"></span><span class="preprocessor">#define sqlite3_threadsafe             sqlite3_api-&gt;xthreadsafe</span>
<a name="l00363"></a>00363 <span class="preprocessor"></span><span class="preprocessor">#define sqlite3_result_zeroblob        sqlite3_api-&gt;result_zeroblob</span>
<a name="l00364"></a>00364 <span class="preprocessor"></span><span class="preprocessor">#define sqlite3_result_error_code      sqlite3_api-&gt;result_error_code</span>
<a name="l00365"></a>00365 <span class="preprocessor"></span><span class="preprocessor">#define sqlite3_test_control           sqlite3_api-&gt;test_control</span>
<a name="l00366"></a>00366 <span class="preprocessor"></span><span class="preprocessor">#define sqlite3_randomness             sqlite3_api-&gt;randomness</span>
<a name="l00367"></a>00367 <span class="preprocessor"></span><span class="preprocessor">#define sqlite3_context_db_handle      sqlite3_api-&gt;context_db_handle</span>
<a name="l00368"></a>00368 <span class="preprocessor"></span><span class="preprocessor">#define sqlite3_extended_result_codes  sqlite3_api-&gt;extended_result_codes</span>
<a name="l00369"></a>00369 <span class="preprocessor"></span><span class="preprocessor">#define sqlite3_limit                  sqlite3_api-&gt;limit</span>
<a name="l00370"></a>00370 <span class="preprocessor"></span><span class="preprocessor">#define sqlite3_next_stmt              sqlite3_api-&gt;next_stmt</span>
<a name="l00371"></a>00371 <span class="preprocessor"></span><span class="preprocessor">#define sqlite3_sql                    sqlite3_api-&gt;sql</span>
<a name="l00372"></a>00372 <span class="preprocessor"></span><span class="preprocessor">#define sqlite3_status                 sqlite3_api-&gt;status</span>
<a name="l00373"></a>00373 <span class="preprocessor"></span><span class="preprocessor">#endif </span><span class="comment">/* SQLITE_CORE */</span>
<a name="l00374"></a>00374 
<a name="l00375"></a>00375 <span class="preprocessor">#define SQLITE_EXTENSION_INIT1     const sqlite3_api_routines *sqlite3_api = 0;</span>
<a name="l00376"></a>00376 <span class="preprocessor"></span><span class="preprocessor">#define SQLITE_EXTENSION_INIT2(v)  sqlite3_api = v;</span>
<a name="l00377"></a>00377 <span class="preprocessor"></span>
<a name="l00378"></a>00378 <span class="preprocessor">#endif </span><span class="comment">/* _SQLITE3EXT_H_ */</span>
</pre></div></div>
<hr size="1"><address style="text-align: right;"><small>Generated on Thu Feb 4 01:36:35 2010 for SpiderPig by&nbsp;
<a href="http://www.doxygen.org/index.html">
<img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.5.8 </small></address>
</body>
</html>
