<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=UTF-8">
<title>SpiderPig: src/kernel/include/fs/fs.h File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css">
<link href="doxygen.css" rel="stylesheet" type="text/css">
</head><body>
<!-- Generated by Doxygen 1.5.8 -->
<div class="navigation" id="top">
  <div class="tabs">
    <ul>
      <li><a href="index.html"><span>Main&nbsp;Page</span></a></li>
      <li><a href="annotated.html"><span>Classes</span></a></li>
      <li class="current"><a href="files.html"><span>Files</span></a></li>
    </ul>
  </div>
  <div class="tabs">
    <ul>
      <li><a href="files.html"><span>File&nbsp;List</span></a></li>
      <li><a href="globals.html"><span>File&nbsp;Members</span></a></li>
    </ul>
  </div>
</div>
<div class="contents">
<h1>src/kernel/include/fs/fs.h File Reference</h1><code>#include &lt;<a class="el" href="types_8h-source.html">types.h</a>&gt;</code><br>
<code>#include &lt;<a class="el" href="mount_8h-source.html">fs/mount.h</a>&gt;</code><br>
<code>#include &lt;<a class="el" href="driver_8h-source.html">driver.h</a>&gt;</code><br>
<code>#include &lt;<a class="el" href="file_8h-source.html">fs/file.h</a>&gt;</code><br>
<code>#include &lt;<a class="el" href="dir_8h-source.html">fs/dir.h</a>&gt;</code><br>

<p>
<a href="fs_8h-source.html">Go to the source code of this file.</a><table border="0" cellpadding="0" cellspacing="0">
<tr><td></td></tr>
<tr><td colspan="2"><br><h2>Classes</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">struct &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="structinode__p.html">inode_p</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">struct &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="structstat.html">stat</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">struct &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="structdirent.html">dirent</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">struct &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="structfs__splitted__path.html">fs_splitted_path</a></td></tr>

<tr><td colspan="2"><br><h2>Defines</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="68cde91e5223ba560722c2d62139bf0e"></a><!-- doxytag: member="fs.h::MOUNT_POINT_NAME_SIZE" ref="68cde91e5223ba560722c2d62139bf0e" args="" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="fs_8h.html#68cde91e5223ba560722c2d62139bf0e">MOUNT_POINT_NAME_SIZE</a>&nbsp;&nbsp;&nbsp;512</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Dimensione massima path del mount point. <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="3ed43f1d044ad2b774580c589aad5a04"></a><!-- doxytag: member="fs.h::NODE_NAME_SIZE" ref="3ed43f1d044ad2b774580c589aad5a04" args="" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="fs_8h.html#3ed43f1d044ad2b774580c589aad5a04">NODE_NAME_SIZE</a>&nbsp;&nbsp;&nbsp;255</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Dimensione massima nome inode. <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="689da43aa67f23b40d83d7a5a16c960b"></a><!-- doxytag: member="fs.h::NODE_TYPE_FILE" ref="689da43aa67f23b40d83d7a5a16c960b" args="" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="fs_8h.html#689da43aa67f23b40d83d7a5a16c960b">NODE_TYPE_FILE</a>&nbsp;&nbsp;&nbsp;1</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Tipo nodo: file. <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="8741a6088db51c059551f1788fc08c19"></a><!-- doxytag: member="fs.h::NODE_TYPE_DIR" ref="8741a6088db51c059551f1788fc08c19" args="" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="fs_8h.html#8741a6088db51c059551f1788fc08c19">NODE_TYPE_DIR</a>&nbsp;&nbsp;&nbsp;2</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Tipo nodo: dir. <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="35c15eedaa353e1dbf00c5e434df68ed"></a><!-- doxytag: member="fs.h::NODE_TYPE_LINK" ref="35c15eedaa353e1dbf00c5e434df68ed" args="" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="fs_8h.html#35c15eedaa353e1dbf00c5e434df68ed">NODE_TYPE_LINK</a>&nbsp;&nbsp;&nbsp;3</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Tipo nodo: link. <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="a007104bcfff5a01b8062f307f569ab8"></a><!-- doxytag: member="fs.h::FS_ER_NT_FOUND" ref="a007104bcfff5a01b8062f307f569ab8" args="" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="fs_8h.html#a007104bcfff5a01b8062f307f569ab8">FS_ER_NT_FOUND</a>&nbsp;&nbsp;&nbsp;1</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Non e' stato trovato un file. <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="2656cf10fdee87658f97eb467614b78b"></a><!-- doxytag: member="fs.h::FS_ER_NT_LINK" ref="2656cf10fdee87658f97eb467614b78b" args="" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="fs_8h.html#2656cf10fdee87658f97eb467614b78b">FS_ER_NT_LINK</a>&nbsp;&nbsp;&nbsp;2</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Non e' un link. <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="1c7fb778f4c7ec3b347fa9ac3a34b6c5"></a><!-- doxytag: member="fs.h::FS_ER_NT_PERM" ref="1c7fb778f4c7ec3b347fa9ac3a34b6c5" args="" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="fs_8h.html#1c7fb778f4c7ec3b347fa9ac3a34b6c5">FS_ER_NT_PERM</a>&nbsp;&nbsp;&nbsp;3</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Operazione non permessa per questo fs. <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="feb09634cb5c61973ff1126cd22e6aa2"></a><!-- doxytag: member="fs.h::NODE_MAX_NUMBER" ref="feb09634cb5c61973ff1126cd22e6aa2" args="" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><b>NODE_MAX_NUMBER</b>&nbsp;&nbsp;&nbsp;1024</td></tr>

<tr><td colspan="2"><br><h2>Typedefs</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">typedef struct <a class="el" href="structinode__p.html">inode_p</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="fs_8h.html#42f092e377248c8263c30b663c7b1f47">inode_t</a></td></tr>

<tr><td colspan="2"><br><h2>Functions</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="fs_8h.html#c38cc84063ef3ade063f204394babb76">fs_init</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">uint32_t&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="fs_8h.html#c9e9544fcdde98cf5f1b9d1c890a173f">fs_check_name</a> (char *)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">uint32_t&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="fs_8h.html#7f607b1ddd542de261338f17b512e6eb">fs_get_node</a> (char *, <a class="el" href="structinode__p.html">inode_t</a> **)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">uint32_t&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="fs_8h.html#9a41b8f3c5d4886061082d5f9ef9bac6">fs_tree_cleanup</a> (<a class="el" href="structinode__p.html">inode_t</a> *, int)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="c74f3612ceb064c8ecf67f335835a53d"></a><!-- doxytag: member="fs.h::fs_path_split" ref="c74f3612ceb064c8ecf67f335835a53d" args="(char *, char **)" -->
uint32_t&nbsp;</td><td class="memItemRight" valign="bottom"><b>fs_path_split</b> (char *, char **)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="fs_8h.html#461202001d45c501c53bae561ef1dc6d">fs_show_tree</a> (<a class="el" href="structinode__p.html">inode_t</a> *, uint32_t)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="structinode__p.html">inode_t</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="fs_8h.html#2cd98de6206069a3ac1a8278d52cb003">fs_create_node</a> (char *, <a class="el" href="structinode__p.html">inode_t</a> *, uint8_t, uint8_t)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">uint32_t&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="fs_8h.html#9f88ce32c26ef82510c4e553ac936294">fs_split_path</a> (char *, <a class="el" href="structfs__splitted__path.html">fs_splitted_path</a> *)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">uint32_t&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="fs_8h.html#eaa28efc15a0ca28e2904acbca88167b">fs_get_full_path</a> (char *, char *, char *)</td></tr>

<tr><td colspan="2"><br><h2>Variables</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="821e1bce4d4cdaa7d994ea41a869358b"></a><!-- doxytag: member="fs.h::fs_root" ref="821e1bce4d4cdaa7d994ea41a869358b" args="" -->
<a class="el" href="structinode__p.html">inode_t</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="fs_8h.html#821e1bce4d4cdaa7d994ea41a869358b">fs_root</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Radice del filesystem. <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="ab3cb2dfac26940e85293d9be53242c3"></a><!-- doxytag: member="fs.h::node_n" ref="ab3cb2dfac26940e85293d9be53242c3" args="" -->
uint32_t&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="fs_8h.html#ab3cb2dfac26940e85293d9be53242c3">node_n</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Numero nodi ow. <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="70ac263088a8855349ba5eb7226e3a44"></a><!-- doxytag: member="fs.h::cur_inode_n" ref="70ac263088a8855349ba5eb7226e3a44" args="" -->
uint32_t&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="fs_8h.html#70ac263088a8855349ba5eb7226e3a44">cur_inode_n</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Numero corrente inode. <br></td></tr>
</table>
<hr><a name="_details"></a><h2>Detailed Description</h2>
<dl class="author" compact><dt><b>Author:</b></dt><dd>Davide Gessa </dd></dl>
<dl class="date" compact><dt><b>Date:</b></dt><dd>11-18-09 </dd></dl>
<hr><h2>Typedef Documentation</h2>
<a class="anchor" name="42f092e377248c8263c30b663c7b1f47"></a><!-- doxytag: member="fs.h::inode_t" ref="42f092e377248c8263c30b663c7b1f47" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef struct <a class="el" href="structinode__p.html">inode_p</a>  <a class="el" href="structinode__p.html">inode_t</a>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Struttura di un inode 
</div>
</div><p>
<hr><h2>Function Documentation</h2>
<a class="anchor" name="c9e9544fcdde98cf5f1b9d1c890a173f"></a><!-- doxytag: member="fs.h::fs_check_name" ref="c9e9544fcdde98cf5f1b9d1c890a173f" args="(char *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint32_t fs_check_name           </td>
          <td>(</td>
          <td class="paramtype">char *&nbsp;</td>
          <td class="paramname"> <em>name</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Controlla se il nome del nodo e' adatto<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>name</em>&nbsp;</td><td>nome del nodo </td></tr>
  </table>
</dl>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>stato della verifica </dd></dl>

</div>
</div><p>
<a class="anchor" name="2cd98de6206069a3ac1a8278d52cb003"></a><!-- doxytag: member="fs.h::fs_create_node" ref="2cd98de6206069a3ac1a8278d52cb003" args="(char *, inode_t *, uint8_t, uint8_t)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structinode__p.html">inode_t</a>* fs_create_node           </td>
          <td>(</td>
          <td class="paramtype">char *&nbsp;</td>
          <td class="paramname"> <em>name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structinode__p.html">inode_t</a> *&nbsp;</td>
          <td class="paramname"> <em>parent</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&nbsp;</td>
          <td class="paramname"> <em>type</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&nbsp;</td>
          <td class="paramname"> <em>ow</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Crea un nodo e restituisce il puntatore<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>name</em>&nbsp;</td><td>nome del nodo </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>parent</em>&nbsp;</td><td>padre del nodo </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>type</em>&nbsp;</td><td>tipo di nodo </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>ow</em>&nbsp;</td><td>se il nodo puo' essere cancellato </td></tr>
  </table>
</dl>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>nodo allocato </dd></dl>

</div>
</div><p>
<a class="anchor" name="eaa28efc15a0ca28e2904acbca88167b"></a><!-- doxytag: member="fs.h::fs_get_full_path" ref="eaa28efc15a0ca28e2904acbca88167b" args="(char *, char *, char *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint32_t fs_get_full_path           </td>
          <td>(</td>
          <td class="paramtype">char *&nbsp;</td>
          <td class="paramname"> <em>cur</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char *&nbsp;</td>
          <td class="paramname"> <em>cur2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char *&nbsp;</td>
          <td class="paramname"> <em>dest</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Crea il path globale 
</div>
</div><p>
<a class="anchor" name="7f607b1ddd542de261338f17b512e6eb"></a><!-- doxytag: member="fs.h::fs_get_node" ref="7f607b1ddd542de261338f17b512e6eb" args="(char *, inode_t **)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint32_t fs_get_node           </td>
          <td>(</td>
          <td class="paramtype">char *&nbsp;</td>
          <td class="paramname"> <em>path</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structinode__p.html">inode_t</a> **&nbsp;</td>
          <td class="paramname"> <em>node</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Dato un path, crea l'albero virtuale, restituendo il nodo<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>path</em>&nbsp;</td><td>path del "file" </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>node</em>&nbsp;</td><td>puntatore a nodo, per l'output </td></tr>
  </table>
</dl>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>numero del nodo </dd></dl>

</div>
</div><p>
<a class="anchor" name="c38cc84063ef3ade063f204394babb76"></a><!-- doxytag: member="fs.h::fs_init" ref="c38cc84063ef3ade063f204394babb76" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void fs_init           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Inizializza il file system manager 
</div>
</div><p>
<a class="anchor" name="461202001d45c501c53bae561ef1dc6d"></a><!-- doxytag: member="fs.h::fs_show_tree" ref="461202001d45c501c53bae561ef1dc6d" args="(inode_t *, uint32_t)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void fs_show_tree           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structinode__p.html">inode_t</a> *&nbsp;</td>
          <td class="paramname"> <em>start</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&nbsp;</td>
          <td class="paramname"> <em>level</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Visualizza tutto l'albero 
</div>
</div><p>
<a class="anchor" name="9f88ce32c26ef82510c4e553ac936294"></a><!-- doxytag: member="fs.h::fs_split_path" ref="9f88ce32c26ef82510c4e553ac936294" args="(char *, fs_splitted_path *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint32_t fs_split_path           </td>
          <td>(</td>
          <td class="paramtype">char *&nbsp;</td>
          <td class="paramname"> <em>path</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structfs__splitted__path.html">fs_splitted_path</a> *&nbsp;</td>
          <td class="paramname"> <em>split</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Splitta un path 
</div>
</div><p>
<a class="anchor" name="9a41b8f3c5d4886061082d5f9ef9bac6"></a><!-- doxytag: member="fs.h::fs_tree_cleanup" ref="9a41b8f3c5d4886061082d5f9ef9bac6" args="(inode_t *, int)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint32_t fs_tree_cleanup           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structinode__p.html">inode_t</a> *&nbsp;</td>
          <td class="paramname"> <em>start</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>attr</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Ripulisce l'albero dai nodi virtuali<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>start</em>&nbsp;</td><td>nodo di partenza </td></tr>
  </table>
</dl>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>nodi eliminati</dd></dl>
<dl class="note" compact><dt><b>Note:</b></dt><dd>il numero restituito e sballato </dd></dl>

</div>
</div><p>
</div>
<hr size="1"><address style="text-align: right;"><small>Generated on Fri Feb 19 23:18:37 2010 for SpiderPig by&nbsp;
<a href="http://www.doxygen.org/index.html">
<img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.5.8 </small></address>
</body>
</html>
